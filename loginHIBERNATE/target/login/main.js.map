{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav/nav.component.css","webpack:///./src/app/components/nav/nav.component.html","webpack:///./src/app/components/nav/nav.component.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAIhB,CAAC;IAFC,+BAAQ,GAAR;IACA,CAAC;IAJU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAKxB;IAAD,mBAAC;CAAA;AALwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACX;AAEE;AACQ;AACU;AACA;AACG;AACN;AAE9D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6EAAa;QACxB,WAAW,EAAE,CAAC,6EAAgB,CAAC;KAChC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,gFAAc;KAC1B;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,EAAE;KACf;CACF,CAAC;AAkBF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,6EAAa;gBACb,gFAAc;gBACd,0EAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;gBAC5B,qEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,CAAC,6EAAgB,CAAC;YAC7B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC5CtB,mB;;;;;;;;;;;ACAA,8D;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACU;AACD;AAO3D;IAGI,uBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,gCAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,QAAQ,GAAG,wEAAW,CAAC,UAAU,CAAC;QAC3C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,GAAG,wEAAW,CAAC,WAAW,CAAC;QAC5C,CAAC;IACL,CAAC;IAXQ,aAAa;QALzB,+DAAS,CAAC;YACP,QAAQ,EAAE,UAAU;;;SAGvB,CAAC;yCAImC,yEAAW;OAHnC,aAAa,CAYzB;IAAD,oBAAC;CAAA;AAZyB;;;;;;;;;;;;ACT1B,mCAAmC,uBAAuB,oBAAoB,2BAA2B,KAAK,C;;;;;;;;;;;ACA9G,2nB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACQ;AACD;AAOzD;IAOE,wBACU,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAEpC,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC;IAC5E,CAAC;IAED,oCAAW,GAAX;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAC1D,cAAM,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,EAAtC,CAAsC,EAC5C,UAAC,GAAG;YACF,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAtBU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCASuB,kEAAW;YAChB,sDAAM;YACP,8DAAc;OAVpB,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACT3B,sBAAsB,yBAAyB,uCAAuC,kBAAkB,mBAAmB,KAAK,YAAY,8BAA8B,2BAA2B,KAAK,C;;;;;;;;;;;ACA1M,+EAA+E,cAAc,+B;;;;;;;;;;;;;;;;;;;;;;;;ACApC;AAOzD;IAIE;IAAgB,CAAC;IAEjB,+BAAQ,GAAR;IACA,CAAC;IALQ;QAAR,2DAAK,EAAE;kCAAW,KAAK;kDAAkB;IAF/B,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,SAAS;;;SAGpB,CAAC;;OACW,YAAY,CASxB;IAAD,mBAAC;CAAA;AATwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPkB;AACwD;AAOnG;IAEE,0BAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,sCAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAC,WAAW,EAAE,EAAC,SAAS,EAAE,KAAK,CAAC,GAAG,EAAC,EAAC,CAAC,CAAC;QACxE,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAVU,gBAAgB;QAL5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;QACF,yBAAyB;QACzB,kDAAkD;;yCAGpB,sDAAM;OAFvB,gBAAgB,CAW5B;IAAD,uBAAC;CAAA;AAX4B;;;;;;;;;;;;;ACR7B;AAAA;AAAA;AAAA;AAAA,8CAA8C;AAC9C,qDAAqD;AACrD,EAAE;AACF,gBAAgB;AAChB,uBAAuB;AACvB,KAAK;AACL,6BAA6B;AAC7B,EAAE;AACF,0DAA0D;AAC1D,EAAE;AACF,iBAAiB;AACjB,+BAA+B;AAC/B,YAAY;AACZ,EAAE;AACF,4BAA4B;AAC5B,yDAAyD;AACzD,MAAM;AACN,EAAE;AACF,8CAA8C;AAC9C,6FAA6F;AAC7F,iEAAiE;AACjE,MAAM;AACN,EAAE;AACF,sEAAsE;AACtE,+CAA+C;AAC/C,+DAA+D;AAC/D,UAAU;AACV,qBAAqB;AACrB,+CAA+C;AAC/C,YAAY;AACZ,WAAW;AACX,qBAAqB;AACrB,0BAA0B;AAC1B,mEAAmE;AACnE,qBAAqB;AACrB,WAAW;AACX,mBAAmB;AACnB,qBAAqB;AACrB,YAAY;AACZ,MAAM;AACN,IAAI;;;;;;;;;;AAGuC;AACO;AAKlD;IAIE,qBACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,YAAO,GAAG,kCAAkC,CAAC;IAIjD,CAAC;IAEL,gCAAU,GAAV;QACE,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC;IACpD,CAAC;IAED,8BAAQ,GAAR,UAAS,KAAoB;QAC3B,IAAM,UAAU,GAAkB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC;QACtF,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,cAAI,IAAI,iBAAU,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAA7B,CAA6B,CAAC,CAAC;IAC5D,CAAC;IAED,kCAAY,GAAZ,UAAa,QAAgB,EAAE,QAAgB,EAAE,OAAO,EAAE,IAAI;QAC5D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,OAAO,EACrC,IAAI,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC,EACrD;YACE,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;SACF,CAAC;aACD,SAAS,EAAE;aACX,IAAI,CAAC,UAAC,IAAI;YACP,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACxD,OAAO,EAAE,CAAC;QACZ,CAAC,EACD,UAAC,GAAG;YACF,IAAI,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACT,CAAC;IAjCU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMgB,+DAAU;OALf,WAAW,CAkCvB;IAAD,kBAAC;CAAA;AAlCuB;;;;;;;;;;;;;ACjDxB;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,uBAAuB;IAC/B,UAAU,EAAE;QACV;YACE,KAAK,EAAE,gBAAgB;SACxB;QACD;YACE,KAAK,EAAE,WAAW;SACnB;QACD;YACE,KAAK,EAAE,cAAc;SACtB;KACF;IACD,WAAW,EAAE;QACX;YACE,KAAK,EAAE,gBAAgB;SACxB;QACD;YACE,KAAK,EAAE,mBAAmB;SAC3B;QACD;YACE,KAAK,EAAE,SAAS;SACjB;KACF;CACF,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACrCnE;AAAA;AAAA;AAAA;AAAA;AAA6C;AAC4B;AAE9B;AACY;AAEvD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AuthGuardService } from './services/auth-guard.service';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { NavComponent } from './components/nav/nav.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuardService]\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    NavComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot(routes),\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [AuthGuardService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<app-nav [navItems]=\\\"userNavs\\\"></app-nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    userNavs: Array<{title: string}>;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        if (this.authService.hasRoles(['Manager'])) {\r\n            this.userNavs = environment.managerNav;\r\n        } else {\r\n            this.userNavs = environment.employeeNav;\r\n        }\r\n    }\r\n}\r\n","module.exports = \".form-container {\\r\\n    margin: 0 auto;\\r\\n    width: 100%;\\r\\n    text-align: center;\\r\\n}\"","module.exports = \"<div class=\\\"form-container\\\">\\r\\n  <form #loginForm=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"loginSubmit()\\\">\\r\\n    <div>\\r\\n      <input \\r\\n      type=\\\"text\\\"\\r\\n      name=\\\"username\\\" \\r\\n      placeholder=\\\"email\\\" \\r\\n      [(ngModel)]=\\\"username\\\"\\r\\n      required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <input \\r\\n        type=\\\"password\\\" \\r\\n        name=\\\"password\\\"\\r\\n        placeholder=\\\"password\\\"\\r\\n        [(ngModel)]=\\\"password\\\"\\r\\n        required/>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button type=\\\"submit\\\" [disabled]=\\\"!loginForm.valid\\\">Login</button>\\r\\n    </div>\\r\\n  </form>    \\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username: string;\r\n  password: string;\r\n\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/login';\r\n  }\r\n\r\n  loginSubmit() {\r\n    this.authService.authenticate(this.username, this.password,\r\n    () => this.router.navigate([this.returnUrl]),\r\n    (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"ul {\\r\\n    list-style: none;\\r\\n    border-bottom: 1px solid #bbbb;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n    display: inline-block;\\r\\n    margin-right: 20px;\\r\\n}\"","module.exports = \"<nav>\\r\\n  <ul>\\r\\n    <li *ngFor=\\\"let item of navItems\\\">{{ item.title }}</li>\\r\\n  </ul>\\r\\n</nav>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n  @Input() navItems: Array<{title: string}>;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n// used as a route guard.\r\n// if returning false the route will not be loaded\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (localStorage.getItem('authToken')) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\r\n    return false;\r\n  }\r\n}\r\n","// import { Injectable } from '@angular/core';\r\n// import { HttpClient } from '@angular/common/http';\r\n//\r\n// @Injectable({\r\n//   providedIn: 'root'\r\n// })\r\n// export class AuthService {\r\n//\r\n//   private authUrl = 'http://localhost:8080/login/auth';\r\n//\r\n//   constructor(\r\n//     private http: HttpClient\r\n//     ) { }\r\n//\r\n//   isLoggedIn(): boolean {\r\n//     return localStorage.getItem('authToken') !== null;\r\n//   }\r\n//\r\n//   hasRoles(roles: Array<string>): boolean {\r\n//     const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).roles;\r\n//     return roles.every(role => tokenRoles.indexOf(role) >= 0);\r\n//   }\r\n//\r\n//   authenticate(username: string, password: string, success, fail) {\r\n//     return this.http.post<any>(this.authUrl,\r\n//       JSON.stringify({email: username, password: password}),\r\n//       {\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         }\r\n//       })\r\n//       .toPromise()\r\n//       .then((resp) => {\r\n//         localStorage.setItem('authToken', JSON.stringify(resp));\r\n//         success();\r\n//       },\r\n//       (err) => {\r\n//         fail(err);\r\n//       });\r\n//   }\r\n// }\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private authUrl = 'http://localhost:8080/login/auth';\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  isLoggedIn(): boolean{\r\n    return localStorage.getItem('authToken') !== null;\r\n  }\r\n\r\n  hasRoles(roles: Array<string>): boolean {\r\n    const tokenRoles: Array<string> = JSON.parse(localStorage.getItem('authToken')).roles;\r\n    return roles.every(role => tokenRoles.indexOf(role) >= 0);\r\n  }\r\n\r\n  authenticate(username: string, password: string, success, fail){\r\n    return this.http.post<any>(this.authUrl,\r\n      JSON.stringify({email: username, password: password}),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n      .toPromise()\r\n      .then((resp) => {\r\n          localStorage.setItem('authToken', JSON.stringify(resp));\r\n          success();\r\n        },\r\n        (err) => {\r\n          fail(err);\r\n        });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:3000\",\r\n  managerNav: [\r\n    {\r\n      title: 'Reimbursements'\r\n    },\r\n    {\r\n      title: 'Employees'\r\n    },\r\n    {\r\n      title: 'New Employee'\r\n    }\r\n  ],\r\n  employeeNav: [\r\n    {\r\n      title: 'Reimbursements'\r\n    },\r\n    {\r\n      title: 'New Reimbursement'\r\n    },\r\n    {\r\n      title: 'Profile'\r\n    }\r\n  ]\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {enableProdMode} from '@angular/core';\r\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\r\n\r\nimport {AppModule} from './app/app.module';\r\nimport {environment} from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}